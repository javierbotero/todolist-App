(()=>{"use strict";var t=[];var n=function(t){return function(t){var n=[],o={getTodos:function(){return n},deleteTodoFromTodos:function(t){n.splice(t,1)},addTodoToTodos:function(t){n.push(t)}};return Object.assign(o,{title:t})}(t)},o=function(n){return t.push(n)},e=function(){return t},i=document.body,c=function(){return document.getElementById("form")},r=function(){return document.querySelector(".add-btn")},d=function(){c().className="hide-form-todo"},u=function(){c().className="show-form-todo"};const l=function(){i.innerHTML='\n    <div id="container">\n    <div id="edit">\n    <h3>Edit</h3>\n    <button class="add-btn">Add Todo</button>\n    </div>\n    <div id="projects">PROJECTS</div>\n    </div>\n    '},s=function(){var t='\n      <div class="hide-form-todo" id="form">\n        <div class=\'ex-btn\'><span>X</span></div>\n        <form>\n          <label for="title">Title</lable><br>\n          <input type="text" id="title">\n          <label for="description">Description</lable><br>\n          <input type="text" id="description">\n          <label for="projects-select">Select the project</label>\n          <select id="projects-select">\n            '.concat(function(){var t="";return e().forEach((function(n){t+='<option value="'.concat(n.title,'">').concat(n.title,"</option>")})),t}(),'\n          </select>\n          <input class="submit-todo" type="submit" value="Submit">\n        </form>\n      </div>\n    ');i.innerHTML+=t,r().onclick=u,document.querySelector(".ex-btn").onclick=d,document.querySelector(".submit-todo").onclick=d};o(n("Default Project")),l(),s()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC1hcHAvLi9zcmMvdG9kb3MuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QtYXBwLy4vc3JjL2xvZ2ljLmpzIiwid2VicGFjazovL3RvZG9saXN0LWFwcC8uL3NyYy9kb21RdWVyaWVzLmpzIiwid2VicGFjazovL3RvZG9saXN0LWFwcC8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJwcm9qZWN0c0xpc3QiLCJsb2dpYyIsInRpdGxlIiwidG9kb3MiLCJwcm90byIsImdldFRvZG9zIiwiZGVsZXRlVG9kb0Zyb21Ub2RvcyIsImluZGV4Iiwic3BsaWNlIiwiYWRkVG9kb1RvVG9kb3MiLCJ0b2RvIiwicHVzaCIsIk9iamVjdCIsImFzc2lnbiIsInByb2plY3RzIiwicHJvamVjdCIsImJvZHkiLCJkb2N1bWVudCIsImZvcm1Ub2RvIiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRUb2RvQnRuIiwicXVlcnlTZWxlY3RvciIsImhpZGVGb3JtVG9kbyIsImNsYXNzTmFtZSIsInNob3dGb3JtVG9kbyIsImlubmVySFRNTCIsImh0bWwiLCJmb3JFYWNoIiwiZGlzcGxheVNlbGVjdCIsIm9uY2xpY2siLCJxdWVyaWVzIl0sIm1hcHBpbmdzIjoibUJBQUEsSUFBTUEsRUFBZSxHQ0VyQixJQUFNQyxFQUNrQixTQUFDQyxHQUFZLE9ERHBCLFNBQUNBLEdBQ2hCLElBQU1DLEVBQVEsR0FDUkMsRUFBUSxDQUNaQyxTQURZLFdBRVYsT0FBT0YsR0FHVEcsb0JBTFksU0FLUUMsR0FDbEJKLEVBQU1LLE9BQU9ELEVBQU8sSUFHdEJFLGVBVFksU0FTR0MsR0FDYlAsRUFBTVEsS0FBS0QsS0FJZixPQUFPRSxPQUFPQyxPQUFPVCxFQUFPLENBQUVGLFVDZllZLENBQVNaLElBRC9DRCxFQU1zQixTQUFDYyxHQUFELE9BQWFmLEVBQWFXLEtBQUtJLElBTnJEZCxFQU9rQixrQkFBTUQsR0NQdEJnQixFQUFTQyxTQUFURCxLQUNGRSxFQUFXLGtCQUFNRCxTQUFTRSxlQUFlLFNBQ3pDQyxFQUFhLGtCQUFNSCxTQUFTSSxjQUFjLGFBSTFDQyxFQUFlLFdBQVFKLElBQVdLLFVBQVksa0JBQzlDQyxFQUFlLFdBQVFOLElBQVdLLFVBQVksa0JBb0VwRCxRQXhEdUIsV0FDbkJQLEVBQUtTLFVBQUwsMExBdURKLEVBcEMwQixXQUN0QixJQUFNQyxFQUFPLHFiQUFILE9BVFUsV0FDcEIsSUFBSUEsRUFBTyxHQUlYLE9BSEF6QixJQUFzQjBCLFNBQVEsU0FBQ1osR0FDN0JXLEdBQVEsa0JBQUosT0FBc0JYLEVBQVFiLE1BQTlCLGFBQXdDYSxFQUFRYixNQUFoRCxnQkFFQ3dCLEVBY0dFLEdBVkEsa0lBaUJWWixFQUFLUyxXQUFhQyxFQS9DcEJOLElBQWFTLFFBQVVMLEVBUENQLFNBQVNJLGNBQWMsV0FXakNRLFFBQVVQLEVBVkVMLFNBQVNJLGNBQWMsZ0JBV2pDUSxRQUFVUCxHQ1o1QnJCLEVBRGdCQSxFQUFvQixvQkFFcEM2QixJQUNBQSxLIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcm9qZWN0c0xpc3QgPSBbXTtcblxuY29uc3QgcHJvamVjdHMgPSAodGl0bGUpID0+IHtcbiAgY29uc3QgdG9kb3MgPSBbXTtcbiAgY29uc3QgcHJvdG8gPSB7XG4gICAgZ2V0VG9kb3MoKSB7XG4gICAgICByZXR1cm4gdG9kb3M7XG4gICAgfSxcblxuICAgIGRlbGV0ZVRvZG9Gcm9tVG9kb3MoaW5kZXgpIHtcbiAgICAgIHRvZG9zLnNwbGljZShpbmRleCwgMSk7XG4gICAgfSxcblxuICAgIGFkZFRvZG9Ub1RvZG9zKHRvZG8pIHtcbiAgICAgIHRvZG9zLnB1c2godG9kbyk7XG4gICAgfSxcbiAgfTtcblxuICByZXR1cm4gT2JqZWN0LmFzc2lnbihwcm90bywgeyB0aXRsZSB9KTtcbn07XG5cbmNvbnN0IHRvZG9zID0gKHRpdGxlLCBkZXNjcmlwdGlvbiwgaW5kZXhQcm9qZWN0KSA9PiB7XG4gIGNvbnN0IGlzQ29tcGxldGUgPSBmYWxzZTtcbiAgY29uc3QgcHJvdG8gPSB7XG4gICAgc2V0SW5kZXhQcm9qZWN0KGluZGV4KSB7XG4gICAgICBpbmRleFByb2plY3QgPSBpbmRleDtcbiAgICB9LFxuICAgIGdldEluZGV4UHJvamVjdCgpIHsgcmV0dXJuIGluZGV4UHJvamVjdDsgfSxcbiAgfTtcblxuICByZXR1cm4gT2JqZWN0LmFzc2lnbihwcm90bywgeyB0aXRsZSwgZGVzY3JpcHRpb24sIGlzQ29tcGxldGUgfSk7XG59O1xuXG5leHBvcnQgeyBwcm9qZWN0c0xpc3QsIHByb2plY3RzLCB0b2RvcyB9OyIsImltcG9ydCB7IHByb2plY3RzTGlzdCwgcHJvamVjdHMsIHRvZG9zIH0gZnJvbSAnLi90b2Rvcyc7XG5cbmNvbnN0IGxvZ2ljID0gKCgpID0+IHtcbiAgY29uc3QgY3JlYXRlUHJvamVjdCA9ICh0aXRsZSkgPT4geyByZXR1cm4gcHJvamVjdHModGl0bGUpOyB9O1xuICBjb25zdCBjcmVhdGVUb2RvID0gKHRpdGxlID0gJ015IFRpdGxlJywgZGVzY3JpcHRpb24gPSAnQWRkIHNvbWUgZGVzY3JpcHRpb24nLCBpbmRleFByb2plY3QgPSAwKSA9PiB7XG4gICAgY29uc3QgdG9kbyA9IHRvZG9zKHRpdGxlLCBkZXNjcmlwdGlvbiwgaW5kZXhQcm9qZWN0KTtcbiAgICBwcm9qZWN0c0xpc3RbaW5kZXhQcm9qZWN0XS5hZGRUb2RvVG9Ub2Rvcyh0b2RvKTtcbiAgfTtcbiAgY29uc3QgYWRkVG9Qcm9qZWN0c0xpc3QgPSAocHJvamVjdCkgPT4gcHJvamVjdHNMaXN0LnB1c2gocHJvamVjdCk7XG4gIGNvbnN0IGZldGNoUHJvamVjdHMgPSAoKSA9PiBwcm9qZWN0c0xpc3Q7XG4gIGNvbnN0IGFkZFRvZG9Ub1Byb2plY3QgPSAodG9kbywgcHJvamVjdCkgPT4geyBwcm9qZWN0LmFkZFRvZG9Ub1RvZG9zKHRvZG8pOyB9O1xuICBjb25zdCBmZWN0aFRvZG9MaXN0ID0gKHByb2plY3QpID0+IHByb2plY3QuZ2V0VG9kb3MoKTtcbiAgY29uc3QgZWRpdFRvZG8gPSAocHJvamVjdCwgaW5kZXgsIFt0aXRsZSwgZGVzY3JpcHRpb24sIGluZGV4UHJvamVjdF0pID0+IHtcbiAgICBjb25zdCB0b2Rvc0xpc3QgPSBmZWN0aFRvZG9MaXN0KHByb2plY3QpO1xuICAgIHRvZG9zTGlzdFtpbmRleF0udGl0bGUgPSB0aXRsZTtcbiAgICB0b2Rvc0xpc3RbaW5kZXhdLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgdG9kb3NMaXN0W2luZGV4XS5zZXRJbmRleFByb2plY3QoaW5kZXhQcm9qZWN0KTtcbiAgfTtcbiAgY29uc3QgZGVsZXRlUHJvamVjdCA9IChpbmRleCkgPT4geyByZXR1cm4gcHJvamVjdHNMaXN0LnNwbGljZShpbmRleCwgMSk7IH07XG4gIGNvbnN0IG1hcmtUb2RvQXNDb21wbGV0ZWQgPSAocHJvamVjdCwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBsaXN0ID0gZmVjdGhUb2RvTGlzdChwcm9qZWN0KTtcbiAgICByZXR1cm4gbGlzdFtpbmRleF0uaXNDb21wbGV0ZSA9ICFsaXN0W2luZGV4XS5pc0NvbXBsZXRlO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgY3JlYXRlUHJvamVjdCxcbiAgICBjcmVhdGVUb2RvLFxuICAgIGFkZFRvUHJvamVjdHNMaXN0LFxuICAgIGZldGNoUHJvamVjdHMsXG4gICAgYWRkVG9kb1RvUHJvamVjdCxcbiAgICBmZWN0aFRvZG9MaXN0LFxuICAgIGVkaXRUb2RvLFxuICAgIG1hcmtUb2RvQXNDb21wbGV0ZWQsXG4gICAgZGVsZXRlUHJvamVjdCxcbiAgfTtcbn0pKCk7XG5cbmV4cG9ydCB7IGxvZ2ljIH07IiwiaW1wb3J0IHsgbG9naWMgfSBmcm9tICcuL2xvZ2ljJztcblxuY29uc3QgeyBib2R5IH0gPSBkb2N1bWVudDtcbmNvbnN0IGZvcm1Ub2RvID0gKCkgPT4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Zvcm0nKTtcbmNvbnN0IGdldFRvZG9CdG4gPSAoKSA9PiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWJ0bicpO1xuY29uc3QgZ2V0Q2xvc2VCdG4gPSAoKSA9PiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZXgtYnRuJyk7XG5jb25zdCBnZXRUb2RvU3VibWl0ID0gKCkgPT4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN1Ym1pdC10b2RvJyk7XG5cbmNvbnN0IGhpZGVGb3JtVG9kbyA9ICgpID0+IHsgZm9ybVRvZG8oKS5jbGFzc05hbWUgPSAnaGlkZS1mb3JtLXRvZG8nOyB9O1xuY29uc3Qgc2hvd0Zvcm1Ub2RvID0gKCkgPT4geyBmb3JtVG9kbygpLmNsYXNzTmFtZSA9ICdzaG93LWZvcm0tdG9kbyc7IH07XG5cbmNvbnN0IGFkZEJ0blRvZG9FdmVudERpc3BsYXkgPSAoKSA9PiB7XG4gIGdldFRvZG9CdG4oKS5vbmNsaWNrID0gc2hvd0Zvcm1Ub2RvO1xufTtcblxuY29uc3QgYWRkQ2xvc2VUb2RvID0gKCkgPT4ge1xuICBnZXRDbG9zZUJ0bigpLm9uY2xpY2sgPSBoaWRlRm9ybVRvZG87XG4gIGdldFRvZG9TdWJtaXQoKS5vbmNsaWNrID0gaGlkZUZvcm1Ub2RvO1xufTtcblxuY29uc3QgcXVlcmllcyA9ICgoKSA9PiB7XG4gIGNvbnN0IGRpc3BsYXlTZXR1cCA9ICgpID0+IHtcbiAgICBib2R5LmlubmVySFRNTCA9IGBcbiAgICA8ZGl2IGlkPVwiY29udGFpbmVyXCI+XG4gICAgPGRpdiBpZD1cImVkaXRcIj5cbiAgICA8aDM+RWRpdDwvaDM+XG4gICAgPGJ1dHRvbiBjbGFzcz1cImFkZC1idG5cIj5BZGQgVG9kbzwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgaWQ9XCJwcm9qZWN0c1wiPlBST0pFQ1RTPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgYDtcbiAgfTtcblxuICBjb25zdCBkaXNwbGF5U2VsZWN0ID0gKCkgPT4ge1xuICAgIGxldCBodG1sID0gJyc7XG4gICAgbG9naWMuZmV0Y2hQcm9qZWN0cygpLmZvckVhY2goKHByb2plY3QpID0+IHtcbiAgICAgIGh0bWwgKz0gYDxvcHRpb24gdmFsdWU9XCIke3Byb2plY3QudGl0bGV9XCI+JHtwcm9qZWN0LnRpdGxlfTwvb3B0aW9uPmA7XG4gICAgfSk7XG4gICAgcmV0dXJuIGh0bWw7XG4gIH07XG5cbiAgY29uc3QgZGlzcGxheUZvcm1Ub2RvID0gKCkgPT4ge1xuICAgIGNvbnN0IGh0bWwgPSBgXG4gICAgICA8ZGl2IGNsYXNzPVwiaGlkZS1mb3JtLXRvZG9cIiBpZD1cImZvcm1cIj5cbiAgICAgICAgPGRpdiBjbGFzcz0nZXgtYnRuJz48c3Bhbj5YPC9zcGFuPjwvZGl2PlxuICAgICAgICA8Zm9ybT5cbiAgICAgICAgICA8bGFiZWwgZm9yPVwidGl0bGVcIj5UaXRsZTwvbGFibGU+PGJyPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwidGl0bGVcIj5cbiAgICAgICAgICA8bGFiZWwgZm9yPVwiZGVzY3JpcHRpb25cIj5EZXNjcmlwdGlvbjwvbGFibGU+PGJyPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwiZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICA8bGFiZWwgZm9yPVwicHJvamVjdHMtc2VsZWN0XCI+U2VsZWN0IHRoZSBwcm9qZWN0PC9sYWJlbD5cbiAgICAgICAgICA8c2VsZWN0IGlkPVwicHJvamVjdHMtc2VsZWN0XCI+XG4gICAgICAgICAgICAke2Rpc3BsYXlTZWxlY3QoKX1cbiAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJzdWJtaXQtdG9kb1wiIHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cIlN1Ym1pdFwiPlxuICAgICAgICA8L2Zvcm0+XG4gICAgICA8L2Rpdj5cbiAgICBgO1xuXG4gICAgYm9keS5pbm5lckhUTUwgKz0gaHRtbDtcbiAgICBhZGRCdG5Ub2RvRXZlbnREaXNwbGF5KCk7XG4gICAgYWRkQ2xvc2VUb2RvKCk7XG4gIH07XG5cbiAgLy8gY29uc3QgaGlkZUZvcm0gPSAoZXZ0KSA9PiB7XG4gIC8vICAgaWYgKGV2dC50YXJnZXQuY2xhc3NOYW1lID09PSAnZXgtYnRuJyB8fCBldnQudGFyZ2V0LmNsYXNzTmFtZSA9PT0gJ3N1Ym1pdC10b2RvJykge1xuICAvLyAgICAgZXZ0LnRhcmdldC5vbmNsaWNrID0gaGlkZUZvcm1Ub2RvKCk7XG4gIC8vICAgfVxuICAvLyB9O1xuXG4gIHJldHVybiB7XG4gICAgZGlzcGxheVNldHVwLFxuICAgIGRpc3BsYXlGb3JtVG9kbyxcbiAgICBnZXRUb2RvQnRuLFxuICB9O1xufSkoKTtcblxuZXhwb3J0IGRlZmF1bHQgcXVlcmllczsiLCJpbXBvcnQgeyBsb2dpYyB9IGZyb20gJy4vbG9naWMnO1xuaW1wb3J0IHF1ZXJpZXMgZnJvbSAnLi9kb21RdWVyaWVzJztcbmltcG9ydCAnLi9hc3NldHMvc3R5bGUuY3NzJztcblxuY29uc3QgcHJvamVjdCA9IGxvZ2ljLmNyZWF0ZVByb2plY3QoJ0RlZmF1bHQgUHJvamVjdCcpO1xubG9naWMuYWRkVG9Qcm9qZWN0c0xpc3QocHJvamVjdCk7XG5xdWVyaWVzLmRpc3BsYXlTZXR1cCgpO1xucXVlcmllcy5kaXNwbGF5Rm9ybVRvZG8oKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=
(()=>{"use strict";var t=[],n=function(t,n,e){var r={setIndexProject:function(t){e=t},getIndexProject:function(){return e}};return Object.assign(r,{title:t,description:n})};function e(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}var r=function(){return t},o=function(n,r){var o,i,a=(i=3,function(t){if(Array.isArray(t))return t}(o=r)||function(t,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var e=[],r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done)&&(e.push(a.value),!n||e.length!==n);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return e}}(o,i)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(o,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=a[0],c=a[1],l=a[2];t[n].title=u,t[n].description=c,t[n].setIndexProject(l)};(function(n){t.push(n)})(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"My Title",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Add some description",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return n(t,e,r)}()),console.log(r()),o(0,["Cleaning the House","Wednesday in the morning clean the house",0]),console.log(r())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC1hcHAvLi9zcmMvdG9kb3MuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QtYXBwLy4vc3JjL2xvZ2ljLmpzIiwid2VicGFjazovL3RvZG9saXN0LWFwcC8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJ0b2Rvc0xpc3QiLCJ0b2RvcyIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJpbmRleFByb2plY3QiLCJwcm90byIsInNldEluZGV4UHJvamVjdCIsImluZGV4IiwiZ2V0SW5kZXhQcm9qZWN0IiwiT2JqZWN0IiwiYXNzaWduIiwibG9naWMiLCJpbmRleFRvZG9MaXN0IiwidG9kbyIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJtQkFBQSxJQUFNQSxFQUFZLEdBR1pDLEVBQVEsU0FBQ0MsRUFBT0MsRUFBYUMsR0FDakMsSUFBTUMsRUFBUSxDQUNaQyxnQkFEWSxTQUNJQyxHQUNkSCxFQUFlRyxHQUVqQkMsZ0JBSlksV0FJUSxPQUFPSixJQUc3QixPQUFPSyxPQUFPQyxPQUFPTCxFQUFPLENBQUVILFFBQU9DLGlCLDBHQ1R2QyxJQUFNUSxFQUtrQixXQUFRLE9BQU9YLEdBTGpDVyxFQU1hLFNBQUNDLEVBQUQsR0FBdUQsSSxJQUFBLEcsRUFBQSxFLDRDQUFBLEksb3dCQUF0Q1YsRUFBc0MsS0FBL0JDLEVBQStCLEtBQWxCQyxFQUFrQixLQUN0RUosRUFBVVksR0FBZVYsTUFBUUEsRUFDakNGLEVBQVVZLEdBQWVULFlBQWNBLEVBQ3ZDSCxFQUFVWSxHQUFlTixnQkFBZ0JGLEtBTGhCLFNBQUNTLEdBQVdiLE9BQWVhLElDSHhERixDREFxQixXQUFnRixJQUEvRVQsRUFBK0UsdURBQXZFLFdBQVlDLEVBQTJELHVEQUE3Qyx1QkFBd0JDLEVBQXFCLHVEQUFOLEVBQzNGLE9BQU9ILEVBQU1DLEVBQU9DLEVBQWFDLEdDRnRCTyxJQUVmRyxRQUFRQyxJQUFJSixLQUNaQSxFQUFlLEVBQUcsQ0FBQyxxQkFBc0IsMkNBQTRDLElBQ3JGRyxRQUFRQyxJQUFJSixNIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0b2Rvc0xpc3QgPSBbXTtcbmNvbnN0IHByb2plY3RzID0gWydTdGFydCBhIFByb2plY3QnXTtcblxuY29uc3QgdG9kb3MgPSAodGl0bGUsIGRlc2NyaXB0aW9uLCBpbmRleFByb2plY3QpID0+IHtcbiAgY29uc3QgcHJvdG8gPSB7XG4gICAgc2V0SW5kZXhQcm9qZWN0KGluZGV4KSB7XG4gICAgICBpbmRleFByb2plY3QgPSBpbmRleDtcbiAgICB9LFxuICAgIGdldEluZGV4UHJvamVjdCgpIHsgcmV0dXJuIGluZGV4UHJvamVjdDsgfSxcbiAgfTtcblxuICByZXR1cm4gT2JqZWN0LmFzc2lnbihwcm90bywgeyB0aXRsZSwgZGVzY3JpcHRpb24gfSk7XG59O1xuXG5leHBvcnQgeyB0b2Rvc0xpc3QsIHRvZG9zLCBwcm9qZWN0cyB9OyIsImltcG9ydCB7IHRvZG9zTGlzdCwgcHJvamVjdHMsIHRvZG9zIH0gZnJvbSAnLi90b2Rvcyc7XG5cbmNvbnN0IGxvZ2ljID0gKCgpID0+IHtcbiAgY29uc3QgY3JlYXRlVG9kbyA9ICh0aXRsZSA9ICdNeSBUaXRsZScsIGRlc2NyaXB0aW9uID0gJ0FkZCBzb21lIGRlc2NyaXB0aW9uJywgaW5kZXhQcm9qZWN0ID0gMCkgPT4ge1xuICAgIHJldHVybiB0b2Rvcyh0aXRsZSwgZGVzY3JpcHRpb24sIGluZGV4UHJvamVjdCk7XG4gIH07XG4gIGNvbnN0IGFkZFRvZG9Ub0FycmF5TGlzdCA9ICh0b2RvKSA9PiB7IHRvZG9zTGlzdC5wdXNoKHRvZG8pOyB9O1xuICBjb25zdCBmZWN0aFRvZG9MaXN0ID0gKCkgPT4geyByZXR1cm4gdG9kb3NMaXN0OyB9O1xuICBjb25zdCBlZGl0VG9kbyA9IChpbmRleFRvZG9MaXN0LCBbdGl0bGUsIGRlc2NyaXB0aW9uLCBpbmRleFByb2plY3RdKSA9PiB7XG4gICAgdG9kb3NMaXN0W2luZGV4VG9kb0xpc3RdLnRpdGxlID0gdGl0bGU7XG4gICAgdG9kb3NMaXN0W2luZGV4VG9kb0xpc3RdLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgdG9kb3NMaXN0W2luZGV4VG9kb0xpc3RdLnNldEluZGV4UHJvamVjdChpbmRleFByb2plY3QpO1xuICB9O1xuICBjb25zdCBkZWxldGVUb2RvID0gKCkgPT4ge307XG4gIGNvbnN0IGNyZWF0ZVByb2plY3QgPSAoKSA9PiB7fTtcbiAgY29uc3QgZGVsZXRlUHJvamVjdCA9ICgpID0+IHt9O1xuICBjb25zdCBtYXJrVG9kb0FzQ29tcGxldGVkID0gKCkgPT4ge307XG4gIGNvbnN0IGNoYW5nZVRvZG9Qcm9qZWN0ID0gKCkgPT4ge307XG5cbiAgcmV0dXJuIHtcbiAgICBjcmVhdGVUb2RvLFxuICAgIGFkZFRvZG9Ub0FycmF5TGlzdCxcbiAgICBmZWN0aFRvZG9MaXN0LFxuICAgIGVkaXRUb2RvLFxuICB9O1xufSkoKTtcblxuZXhwb3J0IHsgbG9naWMgfTsiLCJpbXBvcnQgeyBsb2dpYyB9IGZyb20gJy4vbG9naWMnO1xuXG5jb25zdCBteVRvZG8gPSBsb2dpYy5jcmVhdGVUb2RvKCk7XG5sb2dpYy5hZGRUb2RvVG9BcnJheUxpc3QobXlUb2RvKTtcbmNvbnNvbGUubG9nKGxvZ2ljLmZlY3RoVG9kb0xpc3QoKSk7XG5sb2dpYy5lZGl0VG9kbygwLCBbJ0NsZWFuaW5nIHRoZSBIb3VzZScsICdXZWRuZXNkYXkgaW4gdGhlIG1vcm5pbmcgY2xlYW4gdGhlIGhvdXNlJywgMF0pO1xuY29uc29sZS5sb2cobG9naWMuZmVjdGhUb2RvTGlzdCgpKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=